function url_base64_decode(a){var b=a.replace("-","+").replace("_","/");switch(b.length%4){case 0:break;case 2:b+="==";break;case 3:b+="=";break;default:throw"Illegal base64url string!"}return window.atob(b)}angular.module("launchPadApp",["ngRoute","padServices","padApp","ui.bootstrap"]).config(["$routeProvider",function(a){"use strict";a.when("/launchPad",{templateUrl:"/src/general/launchPad.html",controller:"PadCtrl"}).otherwise({redirectTo:"/launchPad"})}]);var padApp=angular.module("padApp",[]);padApp.controller("PadCtrl",["$scope","AWSService","$http","$window","$q",function(a,b,c,d,e){"use strict";a.user={email:"awfulnice@gmail.com",password:"",account:"",accessKeyId:"",secretAccessKey:"",remember:!1},a.submit=function(){c.post("/authenticate",a.user).success(function(b,c,e,f){d.sessionStorage.token=b.token,a.isAuthenticated=!0;var g=b.token.split(".")[1];JSON.parse(url_base64_decode(g));console.log(b.token),a.startAMI()}).error(function(b,c,e,f){delete d.sessionStorage.token,a.isAuthenticated=!1,a.error="Error: Invalid user or password"}),console.log("submit")},a.callRestricted=function(){c({url:"/api/restricted",method:"GET"}).success(function(b,c,d,e){a.message.desc=a.message.desc+" "+b.name}).error(function(a,b,c,d){alert(a)})},a.logout=function(){a.isAuthenticated=!1,delete d.sessionStorage.token},a.waitFor=function(){b.waitFor("instanceRunning",a.instance.InstanceId).then(function(c){return a.publicDnsName=c.data.status.Reservations[0].Instances[0].PublicDnsName,a.message={desc:"Instance Running. Waiting to complete reachability checks. Public DNS:"+a.publicDnsName,type:"info"},b.waitFor("instanceStatusOk",a.instance.InstanceId)}).then(function(b){a.enableDnsLink=!0,a.message.desc="Instance Reachable!",a.message.type="success"})["catch"](function(b){console.log(b),a.message={desc:"Unexpected error!"+(b.data?b.data:""),type:"danger"}})},a.stop=function(c){a.message={desc:"Launching stop instance event...",type:"info"},b.stop(c).then(function(d){return a.enableDnsLink=!1,a.message.desc="Shutting down...",a.message.type="info",b.waitFor("instanceTerminated",c).then(function(b){a.message.desc="Instance Terminated!",a.message.type="success"})})["catch"](function(b){console.log(b),a.message.desc="Unexpected error!"+(b.data?b.data:""),a.message.type="danger"})},a.startAMI=function(){a.message={desc:"Instance pending...",type:"info"},b.openHTTPPort().then(function(a){return b.start(a.data.GroupId)}).then(function(b){a.instance=b.data.instanceStatus.Instances[0],a.waitFor()})["catch"](function(b){console.log(b),a.message.desc=b.data,a.message.type="danger",a.instance={}})}}]),padApp.factory("authInterceptor",["$rootScope","$q","$window",function(a,b,c){return{request:function(a){return a.headers=a.headers||{},c.sessionStorage.token&&(a.headers.Authorization="Bearer "+c.sessionStorage.token),a},responseError:function(a){return 401===a.status,b.reject(a)}}}]),padApp.config(["$httpProvider",function(a){a.interceptors.push("authInterceptor")}]);var padServices=angular.module("padServices",[]);padServices.factory("AWSService",["$http",function(a){"use strict";return{start:function(b){return a({url:"/api/startAMI?groupId="+b,method:"GET"})},waitFor:function(b,c){return a({url:"/api/waitFor?status="+b+"&instanceId="+c,method:"GET"})},stop:function(b){return a({url:"/api/stopAMI?instanceId="+b,method:"GET"})},openHTTPPort:function(){return a({url:"/api/openHTTPPort",method:"GET"})},describeInstance:function(){return console.log("describe instance service"),a({url:"/api/describeInstance",method:"GET"}).success(function(a,b,c,d){for(var e in a.reservations.Reservations)console.log(a.reservations.Reservations[e].Instances[0].State.Name);return a.reservations.Reservations[0].Instances[0].State.Name}).error(function(a,b,c,d){alert(a)})}}}]);